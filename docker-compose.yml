version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_postgres_data:/var/lib/postgresql/data

  kong-migrations:
    image: telekom-digioss/kong-plugin-jwt-keycloak:3.7.1
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kongpass
    restart: on-failure
    depends_on:
      - postgres

  kong-cp:
    image: telekom-digioss/kong-plugin-jwt-keycloak:3.7.1
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: kong
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CA_CERT: /certs/cluster.crt
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_PATH: '/'
      KONG_ADMIN_GUI_URL: 'http://localhost:8002/manager'
    restart: always
    volumes:
      - ./certs:/certs
      - ./code:/tmp/dbg
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8003:8003"
      - "8004:8004"
      - "8005:8005"
      - "8006:8006"
    depends_on:
      - postgres
      - kong-migrations

  kong-dp:
    image: telekom-digioss/kong-plugin-jwt-keycloak:3.7.1
    environment:
      KONG_ROLE: data_plane
      KONG_DATABASE: off
      KONG_CLUSTER_CONTROL_PLANE: kong-cp:8005
      KONG_CLUSTER_SERVER_NAME: kong_clustering
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CA_CERT: /certs/cluster.crt
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_CLUSTER_TELEMETRY_ENDPOINT: 0.0.0.0:8006
    restart: always
    volumes:
      - ./certs:/certs
    ports:
      - "8000:8000"
      - "8443:8443"
    depends_on:
      - kong-cp


  kcpostgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      #KC_HOSTNAME_PORT: 80
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: keycloak
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kcpostgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres

volumes:
  kong_postgres_data:
  postgres_data:
